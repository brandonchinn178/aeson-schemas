cabal-version: >= 1.10

-- This file has been generated from package.yaml by hpack version 0.35.0.
--
-- see: https://github.com/sol/hpack

name:           aeson-schemas
version:        1.4.0.0
synopsis:       Easily consume JSON data on-demand with type-safety
description:    Parse JSON data easily and safely without defining new data types. Useful
                for deeply nested JSON data, which is difficult to parse using the default
                FromJSON instances.
category:       JSON
homepage:       https://github.com/LeapYear/aeson-schemas#readme
bug-reports:    https://github.com/LeapYear/aeson-schemas/issues
author:         Brandon Chinn <brandon@leapyear.io>
maintainer:     Brandon Chinn <brandon@leapyear.io>
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGELOG.md
    examples/input.json
    test/goldens/fromjson_error_messages_truncate.golden
    test/goldens/fromjson_list_inner_invalid.golden
    test/goldens/fromjson_list_invalid.golden
    test/goldens/fromjson_maybe_invalid.golden
    test/goldens/fromjson_nested_inner_invalid.golden
    test/goldens/fromjson_nested_invalid.golden
    test/goldens/fromjson_object_invalid.golden
    test/goldens/fromjson_object_later_keys_invalid.golden
    test/goldens/fromjson_phantom_inner_invalid.golden
    test/goldens/fromjson_phantom_inner_missing.golden
    test/goldens/fromjson_phantom_invalid.golden
    test/goldens/fromjson_scalar_invalid.golden
    test/goldens/fromjson_union_invalid.golden
    test/goldens/getqq_empty_expression.golden
    test/goldens/getqq_missing_key.golden
    test/goldens/getqq_no_operators.golden
    test/goldens/getqq_ops_after_list.golden
    test/goldens/getqq_ops_after_tuple.golden
    test/goldens/README_Quickstart.golden
    test/goldens/schemaqq_key_with_invalid_character.golden
    test/goldens/schemaqq_key_with_trailing_escape.golden
    test/goldens/sumtype_decode_invalid.golden
    test/goldens/unwrapqq_unwrap_past_list.golden
    test/goldens/unwrapqq_unwrap_past_tuple.golden
    test/wont-compile/GetMissingKey.hs

source-repository head
  type: git
  location: https://github.com/LeapYear/aeson-schemas

library
  exposed-modules:
      Data.Aeson.Schema
      Data.Aeson.Schema.Internal
      Data.Aeson.Schema.Key
      Data.Aeson.Schema.TH
      Data.Aeson.Schema.Type
      Data.Aeson.Schema.Utils.All
      Data.Aeson.Schema.Utils.Compat
      Data.Aeson.Schema.Utils.Invariant
      Data.Aeson.Schema.Utils.NameLike
      Data.Aeson.Schema.Utils.Sum
  other-modules:
      Data.Aeson.Schema.TH.Enum
      Data.Aeson.Schema.TH.Get
      Data.Aeson.Schema.TH.Getter
      Data.Aeson.Schema.TH.Parse
      Data.Aeson.Schema.TH.Schema
      Data.Aeson.Schema.TH.Unwrap
      Data.Aeson.Schema.TH.Utils
  hs-source-dirs:
      src
  ghc-options: -Wall
  build-depends:
      aeson >=1.1.2.0 && <3
    , base >=4.14 && <5
    , first-class-families >=0.3.0.0 && <0.9
    , hashable >=1.2.7.0 && <1.5
    , megaparsec >=7 && <10
    , template-haskell >=2.16 && <2.19
    , text >=1.2.2.2 && <1.3
    , unordered-containers >=0.2.8.0 && <0.3
  default-language: Haskell2010
  if impl(ghc >= 8.0)
    ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wnoncanonical-monad-instances
  if impl(ghc < 8.8)
    ghc-options: -Wnoncanonical-monadfail-instances

test-suite aeson-schemas-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Tests.EnumTH
      Tests.GetQQ
      Tests.GetQQ.TH
      Tests.MkGetter
      Tests.Object
      Tests.Object.Eq
      Tests.Object.FromJSON
      Tests.Object.FromJSON.TH
      Tests.Object.Show
      Tests.Object.Show.TH
      Tests.Object.ToJSON
      Tests.Quickstart
      Tests.SchemaQQ
      Tests.SchemaQQ.TH
      Tests.SumType
      Tests.UnwrapQQ
      Tests.UnwrapQQ.TH
      TestUtils
      TestUtils.Arbitrary
      TestUtils.DeepSeq
      Paths_aeson_schemas
  hs-source-dirs:
      test
  ghc-options: -Wall
  build-depends:
      QuickCheck
    , aeson >=1.1.2.0 && <3
    , aeson-qq
    , aeson-schemas
    , base >=4.14 && <5
    , deepseq
    , filepath
    , first-class-families >=0.3.0.0 && <0.9
    , hashable >=1.2.7.0 && <1.5
    , hint
    , interpolate
    , megaparsec >=7 && <10
    , process
    , raw-strings-qq
    , tasty
    , tasty-golden
    , tasty-hunit
    , tasty-quickcheck
    , template-haskell >=2.16 && <2.19
    , temporary
    , text >=1.2.2.2 && <1.3
    , th-orphans
    , th-test-utils
    , unordered-containers >=0.2.8.0 && <0.3
  default-language: Haskell2010
  if impl(ghc >= 8.0)
    ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wnoncanonical-monad-instances
  if impl(ghc < 8.8)
    ghc-options: -Wnoncanonical-monadfail-instances

benchmark aeson-schemas-bench
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Benchmarks.Data.Objects
      Benchmarks.Data.Schemas
      Benchmarks.Data.Schemas.TH
      Benchmarks.FromJSON
      Benchmarks.SchemaQQ
      Benchmarks.Show
      Benchmarks.ToJSON
      Utils.DeepSeq
      Paths_aeson_schemas
  hs-source-dirs:
      bench
  ghc-options: -Wall
  build-depends:
      aeson >=1.1.2.0 && <3
    , aeson-schemas
    , base >=4.14 && <5
    , criterion
    , deepseq
    , first-class-families >=0.3.0.0 && <0.9
    , hashable >=1.2.7.0 && <1.5
    , megaparsec >=7 && <10
    , template-haskell >=2.16 && <2.19
    , text >=1.2.2.2 && <1.3
    , th-test-utils
    , unordered-containers >=0.2.8.0 && <0.3
  default-language: Haskell2010
  if impl(ghc >= 8.0)
    ghc-options: -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wnoncanonical-monad-instances
  if impl(ghc < 8.8)
    ghc-options: -Wnoncanonical-monadfail-instances
