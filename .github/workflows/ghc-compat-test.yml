on:
  workflow_call:
    inputs:
      ghc_version:
        required: true
        type: string
      oldest:
        required: false
        type: boolean

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      -
        uses: actions/checkout@v3
      -
        id: setup
        name: Set up GHC ${{ inputs.ghc_version }}
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ inputs.ghc_version }}
          cabal-version: '3.10'
          ghcup-release-channel: https://ghc.gitlab.haskell.org/ghcup-metadata/ghcup-nightlies-0.0.7.yaml
      -
        name: Configure the build
        run:
          cabal configure
             --ghc-options='-Werror -Wno-unused-packages'
            --enable-test
            --enable-bench
            --test-options=--color=always
            --test-show-details=streaming
      -
        if: ${{ inputs.oldest }}
        name: Use oldest dependencies
        run:
          cabal configure --enable-append
            --prefer-oldest
      -
        if: ${{ inputs.ghc_version == 'latest-nightly' }}
        name: Add head.hackage
        run: |
          curl -fsSL -o /tmp/head.hackage.sh https://gitlab.haskell.org/ghc/head.hackage/-/raw/master/scripts/head.hackage.sh
          bash /tmp/head.hackage.sh dump-repo >> cabal.project.local
          cabal update

          # https://gitlab.haskell.org/ghc/head.hackage/-/blob/90570e1c4606c1d7d3d41797ec1b32d1b984067b/ci/MakeConstraints.hs#L40-49
          cabal configure --enable-append \
            --allow-newer=base \
            --allow-newer=template-haskell \
            --allow-newer=ghc \
            --allow-newer=ghc-prim \
            --allow-newer=integer-gmp \
            --allow-newer=ghc-bignum \
            --allow-newer=time \
            --allow-newer=binary \
            --allow-newer=bytestring \
            --allow-newer=Cabal \
            --allow-newer=deepseq \
            --allow-newer=text
      -
        name: Get build plan
        run: cabal build --dry-run
      -
        name: Get current month to clear cache
        run: echo "CURR_MONTH=$(date +%B)" | tee -a "$GITHUB_ENV"
      # -
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.setup.outputs.cabal-store }}
      #     key: ${{ runner.os }}-cabal-cache-${{ env.CURR_MONTH }}-${{ inputs.ghc_version }}-${{ hashFiles('**/plan.json') }}
      #     restore-keys: |
      #          ${{ runner.os }}-cabal-cache-${{ env.CURR_MONTH }}-${{ inputs.ghc_version }}-
      -
        run: cabal build
      -
        run: cabal exec -- cabal test
      -
        name: Check that files are unmodified
        run: git add -A && git diff --staged --exit-code
